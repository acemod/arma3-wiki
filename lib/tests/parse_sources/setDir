{{RV|type=command

|game1= ofp
|version1= 1.00

|game2= ofpe
|version2= 1.00

|game3= arma1
|version3= 1.00

|game4= arma2
|version4= 1.00

|game5= arma2oa
|version5= 1.50

|game6= tkoh
|version6= 1.00

|game7= arma3
|version7= 0.50

|arg= local
|eff= global

|gr1= Object Manipulation

|descr= Sets object heading. Angles are measured in degrees clockwise from north; the regular range goes from 0 to 360 (0째 = N, 90째 = E, 180째 = S, 270째 = W). Negative angles represent counter-clockwise angles.
{{Feature|important|This command resets the object's [[velocity]] and [[vectorUp]]!}}
{{Feature|informative|In ''some'' earlier titles ({{ofp}}?), this command was {{Icon|localEffect|32}}.}}

|pr= <nowiki/>
* The effect is {{Icon|localEffect|32}} when using [[setDir]] on a mine. Use a position modification to broadcast [[setDir]]'s change (see {{Link|#Example 4}})
* setting direction ''after'' position may lead to weird behaviours - see {{Link|#Notes}}

|mp= See the {{Link|#Notes}} below

|s1= object [[setDir]] heading

|p1= object: [[Object]]

|p2= heading: [[Number]]

|r1= [[Nothing]]

|x1= <sqf>myUnit setDir 45; // will set myUnit to face North-East</sqf>

|x2= <sqf>myUnit setDir -675; // will also set myUnit to face North-East (= 45-360-360)</sqf>

|x3= <sqf>
MyUnit setDir 30;
MyUnit setFormDir 30; // needed for AI to keep the given direction
</sqf>

|x4= <sqf>
// provided _myMine is local
_myMine setDir 45;
_myMine setPosWorld getPosWorld _myMine;

// or
[_myMine, 45] remoteExec ["setDir"];
</sqf>

|seealso= [[getDir]] [[direction]] [[setFormDir]] [[setVectorDir]] [[setVectorDirAndUp]]
}}

{{Note
|user= Manny
|timestamp= 20070509204300
|text= Though effects of this command remain local, you can do a [[setPos]] afterwards to synchronize the direction on all machines in MP.
<sqf>
myObj setDir 90;
myObj setPos getPos myObj;
</sqf>
|game= arma1
}}

{{Note
|user= kju
|timestamp= 20010405105400
|text= In {{arma2oa}} 1.59 the comment of Manny still holds true for [[createVehicle]]'d empty vehicles by the server.
For the player object a local [[setDir]] alone is enough.
}}

{{Note
|user= Killzone_Kid
|timestamp= 20131125114700
|text= In {{arma3}}, [[setDir]] affects [[vectorUp]], [[vectorDir]] and [[velocity]] of the object it applied to. While this is not noticeable with stationary objects, a moving objects will have its orientation and velocity reset. So if you are planning on using [[setDir]] on a moving object, make sure you read the velocity value before and restore it after if you want the object to continue to move.
<sqf>
_vel = velocity _object;
_object setDir 45;
_object setVelocity _vel;
</sqf>
With orientation it is a bit more complicated. [[setDir]] resets [[vectorUp]] to [0,0,1] and changes [[vectorDir]] accordingly to accommodate set direction. If your object's [[vectorUp]] is not [0,0,1] and you want to keep it this way, then you have to use [[setVectorDirAndUp]] to change object's direction not [[setDir]]. This is also the reason why it is better to use [[setVectorDirAndUp]] instead of [[setDir]] on attached objects for a better control of object's orientation.
}}

{{Note
|user= Killzone_Kid
|timestamp= 20131127230900
|text= Make sure you [[setDir]] BEFORE you set position. '''Setting direction after set position could lead to unpredictable behaviour'''. For example main part of the hospital building in Arma 3 can lose collision detection near both side entrances. AI will also get confused and will stop detecting obstacles if [[setDir]] is called after [[setPos]].
}}