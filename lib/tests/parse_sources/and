{{RV|type=command

|game1= ofp
|version1= 1.00

|game2= ofpe
|version2= 1.00

|game3= arma1
|version3= 1.00

|game4= arma2
|version4= 1.00

|game5= arma2oa
|version5= 1.50

|game6= tkoh
|version6= 1.00

|game7= arma3
|version7= 0.50

|gr1= Variables

|gr2= Math

|descr= Returns [[true]] only if both conditions are [[true]].
In case of the alternative syntax, {{Link|https://en.wikipedia.org/wiki/Lazy_evaluation#Control_structures|lazy evaluation}} is used - if left operand is [[false]], evaluation of the right side is ignored.

|alias= [[a && b]]

|s1= a [[and]] b

|p1= a: [[Boolean]] - test condition or variable

|p2= b: [[Boolean]] - test condition or variable

|r1= [[Boolean]]

|s2= a [[and]] b

|s2since= arma2oa 1.62

|p21= a: [[Boolean]] - Test condition or variable

|p22= b: [[Code]] - Code that returns [[Boolean]]. It is '''not''' evaluated if ''a'' is [[false]]

|r2= [[Boolean]]

|x1= <sqf>
if ((not isNull player) and (alive player) and (_enemycount == 0)) then
{
	hint "you win !";
};
</sqf>

|x2= <sqf>
if ((count _array > 0) and { (_array select 0) == player }) then	// works as expected
{
	hint "It works!";
};

if ((count _array > 0) and (_array select 0) == player) then		// Error: _array select 0 is evaluated
{
	hint "It... works?";
};
</sqf>

|seealso= [[a && b]] [[or]] [[Operators]]
}}