name: startLoadingScreen
description: "Shows loading screen with the given text, using the given resource. While loading screen is shown, simulation and scene drawing is disabled, user control is disabled, mouse cursor is hidden, scripts run at full speed (50ms per frame instead of 3ms per frame for [[Scheduler|Scheduled Scripts]]).<br>\n\n{{Feature|informative|2=\nBy default, [[startLoadingScreen]] will use \"RscDisplayNotFreeze\" resource.<br>\nA custom resource can be defined in [[Description.ext]], and a full black background will be used by default - the following controls are supported by the engine:\n* idc = 101 - text (type = 0) or picture (type = 48). The text will be set to the value provided by the command argument.\n* idc = 103 - progress (type = 8) or animated texture (type = 45). This control indicates global hardcoded mission loading progress and is useless after the mission is loaded.\n* idc = 104 - progress (type = 8). This control's progress is initially set to 0 and can be manipulated with [[progressLoadingScreen]] command. \n\nResource can be defined in [[Description.ext]]; it must NOT be defined as {{hl|RscTitles}}!\n<spoiler text=\"See config example\">\n<syntaxhighlight lang=\"cpp\">\n// basic defines - pre \"import\" keyword in v2.02\nclass RscText\n{\n\ttype = 0;\n\tidc = -1;\n\tx = 0;\n\ty = 0;\n\th = 0.037;\n\tw = 0.3;\n\tstyle = 0x100;\n\tfont = Zeppelin32;\n\tSizeEx = 0.03921;\n\tcolorText[] = { 1, 1, 1, 1 };\n\tcolorBackground[] = { 0, 0, 0, 0 };\n\tlinespacing = 1;\n};\n\nclass RscPicture\n{\n\taccess = 0;\n\ttype = 0;\n\tidc = -1;\n\tstyle = 48;\n\tcolorBackground[] = { 0, 0, 0, 0 };\n\tcolorText[] = { 1, 1, 1, 1 };\n\tfont = \"TahomaB\";\n\tsizeEx = 0;\n\tlineSpacing = 0;\n\ttext = \"\";\n};\n\nclass RscLoadingText : RscText\n{\n\tstyle = 2;\n\tx = 0.323532;\n\ty = 0.666672;\n\tw = 0.352944;\n\th = 0.039216;\n\tsizeEx = 0.03921;\n\tcolorText[] = { 0.543, 0.5742, 0.4102, 1.0 };\n};\n\nclass RscProgress\n{\n\tx = 0.344;\n\ty = 0.619;\n\tw = 0.313726;\n\th = 0.0261438;\n\ttexture = \"\\ca\\ui\\data\\loadscreen_progressbar_ca.paa\";\n\tcolorFrame[] = { 0, 0, 0, 0 };\n\tcolorBar[] = { 1, 1, 1, 1 };\n};\n\nclass RscProgressNotFreeze\n{\n\tidc = -1;\n\ttype = 45;\n\tstyle = 0;\n\tx = 0.022059;\n\ty = 0.911772;\n\tw = 0.029412;\n\th = 0.039216;\n\ttexture = \"#(argb,8,8,3)color(0,0,0,0)\";\n};\n\n// end of basic defines\n\nclass WIKI_loadingScreen\n{ \n\tidd = -1;\n\tduration = 10e10;\n\tfadein = 0;\n\tfadeout = 0;\n\tname = \"loading screen\";\n\tclass controlsBackground\n\t{\n\t\tclass blueBackground : RscText // covers the black screen\n\t\t{\n\t\t\tx = safezoneXAbs;\n\t\t\ty = safezoneY;\n\t\t\tw = safezoneWAbs;\n\t\t\th = safezoneH;\n\t\t\ttext = \"\";\n\t\t\tcolorText[] = { 0, 0, 0, 0 };\n\t\t\tcolorBackground[] = { 0, 0, 1, 1 };\n\t\t};\n\n\t\tclass nicePic : RscPicture\n\t\t{\n\t\t\tstyle = 48 + 0x800; // ST_PICTURE + ST_KEEP_ASPECT_RATIO\n\t\t\tx = safezoneX + safezoneW/2 - 0.25;\n\t\t\ty = safezoneY + safezoneH/2 - 0.2;\n\t\t\tw = 0.5;\n\t\t\th = 0.4;\n\t\t\ttext = \"img\\nicePic.paa\";\n\t\t};\n\t};\n\n\tclass controls\n\t{\n\t\tclass Title1 : RscLoadingText\n\t\t{\n\t\t\ttext = \"$STR_LOADING\"; // \"Loading\" text in the middle of the screen\n\t\t};\n\n\t\tclass CA_Progress : RscProgress // progress bar, has to have idc 104\n\t\t{\n\t\t\tidc = 104;\n\t\t\ttype = 8; // CT_PROGRESS\n\t\t\tstyle = 0; // ST_SINGLE\n\t\t\ttexture = \"\\ca\\ui\\data\\loadscreen_progressbar_ca.paa\";\n\t\t};\n\n\t\tclass CA_Progress2 : RscProgressNotFreeze // progress bar that will go reverse\n\t\t{\n\t\t\tidc = 103;\n\t\t};\n\n\t\tclass Name2 : RscText // the text on the top-left\n\t\t{\n\t\t\tidc = 101;\n\t\t\tx = 0.05;\n\t\t\ty = 0.029412;\n\t\t\tw = 0.9;\n\t\t\th = 0.04902;\n\t\t\ttext = \"\";\n\t\t\tsizeEx = 0.05;\n\t\t\tcolorText[] = { 0.543, 0.5742, 0.4102, 1.0 };\n\t\t};\n\t};\n};\n</syntaxhighlight>\n</spoiler>\n}}\n\n{{Feature|warning|\n* The loading screen does '''not''' end by itself and absolutely needs a call to [[endLoadingScreen]] command\n* Game simulation is disabled during Loading Screen operation (at least in single player):\n** do '''not''' use the [[sleep]] command between [[startLoadingScreen]] and [[endLoadingScreen]] as '''it may freeze the game''' - use [[uiSleep]] instead\n** [[waitUntil]] ''can'' be used to wait for variable initialisation or script loading\n}}\n{{Feature|arma3|Use [[BIS_fnc_startLoadingScreen]] to prevent potential usage conflicts.}}\n\n{{Feature|arma3|The loading screen can be force-ended with [https://community.bistudio.com/wiki/Arma_3:_Cheats#ENDLOAD ENDLOAD cheat code].}}"
groups:
- System
syntax:
- call: !Unary
  - text
  - resource
  ret:
  - Nothing
  - null
  params:
  - name: text
    type: String
  - name: resource
    type: String
    optional: true
argument_loc: Unspecified
effect_loc: Unspecified
since:
  arma_2:
    major: 1
    minor: 0
  arma_2_arrowhead:
    major: 1
    minor: 50
  take_on_helicopters:
    major: 1
    minor: 0
  arma_3:
    major: 0
    minor: 50
examples:
- <sqf>startLoadingScreen ["Loading My Mission, please wait..."];</sqf>
- <sqf>startLoadingScreen ["Can't skip loading time...", "MyLoadingRsc"];</sqf>
- |-
  <sqf>
  startLoadingScreen ["Loading My Mission"];
  // code
  progressLoadingScreen 0.5;
  // code
  endLoadingScreen;
  </sqf>
- "<sqf>\n// this structure prevents error-prone or lengthy code to miss endLoadingScreen.\nprivate _maxTime = diag_tickTime + 30; // max 30s of loading\n\nstartLoadingScreen [\"Loading\"];\nprivate _handle = [] spawn {\n\t// code that may crash or take too long\n};\n\nwaitUntil { uiSleep .1; scriptDone _handle || diag_tickTime > _maxTime };\nendLoadingScreen;\n</sqf>"
