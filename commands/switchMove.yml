name: switchMove
description: |-
  Immediately applies given animation to the unit. For a smooth transition from the current animation, use [[playMove]].
  {{Feature|informative|see [[:Category:Moves]] for respective games animations.}}

  This command first resets the unit's animation states (including aiming state, gesture state, etc.) then puts the unit in the first frame of the animation (therefore showing no transition).
  If an invalid animation is provided, the unit's animations will be reset but no new animation will be played (see {{Link|#Example 3}}).

  {{Feature|informative|It is a good practice to always use [[playMoveNow]] after [[switchMove]] to make sure the animation plays correctly:
  <sqf>
  _unit switchMove "myMove";
  _unit playMoveNow "myMove";
  </sqf>
  }}
multiplayer_note: |-
  This command has a global effect when executed locally to the unit and will synchronise properly for JIP.
  In this case the animation on the executing machine is immediate while on remote machines it will be transitional.
  In order for the animation to change immediately on every PC in multiplayer, use global remote execution (see {{Link|#Example 2}}).
  When the argument is remote, the animation change on the executing PC is only temporary.
groups:
- Animations
syntax:
- call: !Binary
  - person
  - moveName
  ret:
  - Unknown
  - null
  params:
  - name: person
    description: unit
    type: Unknown
  - name: moveName
    description: animation state (see [[animationState]])
    type: Unknown
- call: !Binary
  - person
  - - moveName
    - time
    - blendFactor
    - resetAim
  ret:
  - Unknown
  - null
  params:
  - name: person
    description: unit
    type: Unknown
  - name: moveName
    description: entry from {{hl|"CfgMovesMaleSdr" >> "states"}} or {{hl|"CfgGesturesMale" >> "states"}}
    type: Unknown
  - name: time
    description: normalized time, in range 0..1, where 0 = beginning of the animation, and 1 = end of the animation
    type: Unknown
    optional: true
    default: '0'
  - name: blendFactor
    description: blending of the new animation with the current animation, in range 0..1
    type: Unknown
    optional: true
    default: '0'
  - name: resetAim
    description: whether the aim/head direction should be reset after switching
    type: Unknown
    optional: true
    default: 'true'
  since:
    arma_3:
      major: 2
      minor: 18
argument_loc: Local
effect_loc: Global
since:
  flashpoint:
    major: 1
    minor: 0
  flashpoint_elite:
    major: 1
    minor: 0
  armed_assault:
    major: 1
    minor: 0
  arma_2:
    major: 1
    minor: 0
  arma_2_arrowhead:
    major: 1
    minor: 50
  take_on_helicopters:
    major: 1
    minor: 0
  arma_3:
    major: 0
    minor: 50
examples:
- |-
  Prone:
  <sqf>player switchMove "AmovPpneMstpSrasWrflDnon";
- |-
  Sit player immediately and globally:
  <sqf>[player, "AmovPsitMstpSlowWrflDnon"] remoteExec ["switchMove"];
- |-
  Resets unit's animation:
  <sqf>_unit switchMove "";
- "// Create a dummy agent that copies your moves\nai1 = createAgent [typeOf player, getPosATL player, [], 0, \"NONE\"];\nai1 disableAI \"ALL\";\nonEachFrame\n{\n\tai1 setAnimSpeedCoef getAnimSpeedCoef player;\n\tai1 setVectorDir vectorDir player;\n\tprivate _m = animationState player;\n\tprivate _g = gestureState player;\n\tprivate _i = getUnitMovesInfo player;\n\tprivate _a = getUnitMovesInfo ai1;\n\t\n\tif (animationState ai1 != _m || abs(_i#1 - _a#1) > 0.1) then\n\t{\n\t\tai1 switchMove [_m, _i#0, _i#3, false];\n\t};\n\n\tif ((gestureState ai1 != _g || abs(_i#6 - _a#6) > 0.1) && (_g != \"<none>\" && _g find \"_player\" < 0)) then\n\t{\n\t\tai1 switchGesture [_g, _i#5, _i#8, false];\n\t};\n}\n"
