name: apply
description: Applies the given code to each element of the given data structure and collects the results in an array.
groups:
- Arrays
- HashMap
syntax:
- call: !Binary
  - array
  - code
  ret:
  - ArrayUnknown
  - resulting array
  params:
  - name: array
    description: array of [[Anything]]
    type: ArrayUnknown
  - name: code
    description: code to be executed on each element of the array. The current element value is stored in the magic variable [[Magic Variables#x|_x]].
    type: Code
- call: !Binary
  - hashmap
  - code
  ret:
  - ArrayUnknown
  - resulting array
  params:
  - name: hashmap
    type: HashMapUnknown
  - name: code
    description: code to be executed on each key-value pair of the hashmap. The current key is stored in the magic variable [[Magic Variables#x|_x]], the corresponding value is stored in [[Magic Variables#y|_y]].
    type: Code
  since:
    arma_3:
      major: 2
      minor: 4
argument_loc: Unspecified
effect_loc: Unspecified
since:
  arma_3:
    major: 1
    minor: 56
examples:
- <sqf>private _arr = [1,2,3,4,5,6,7,8,9,0] apply { [1,0] select (_x % 2 == 0) }; // [1,0,1,0,1,0,1,0,1,0]</sqf>
- <sqf>private _arr = [1,2,3,4,5,6,7,8,9,0] apply { _x ^ _x }; // [1,4,27,256,3125,46656,823543,16777216,387420480,1]</sqf>
- |-
  <sqf>
  private _arr1 = [];
  _arr1 resize 20;
  _arr2 = _arr1 apply { 0 }; // [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
  </sqf>
- <sqf>[0,1,2,3,4] apply { str _x }; // ["0","1","2","3","4"]</sqf>
- |-
  <sqf>
  private _hashmap = createHashMapFromArray [["Key 1", "Value 1"], ["Key 2", "Value 2"]];
  private _array = _hashmap apply { _y + " Test" }; // ["Value 2 Test","Value 1 Test"]
  </sqf>
