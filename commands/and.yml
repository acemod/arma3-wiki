name: and
description: |-
  Returns [[true]] only if both conditions are [[true]].
  In case of the alternative syntax, {{Link|https://en.wikipedia.org/wiki/Lazy_evaluation#Control_structures|lazy evaluation}} is used - if left operand is [[false]], evaluation of the right side is ignored.
alias:
- '[[a && b]]'
groups:
- Variables
- Math
syntax:
- call: !Binary
  - a
  - b
  ret:
  - Boolean
  - null
  params:
  - name: a
    description: test condition or variable
    type: Unknown
  - name: b
    description: test condition or variable
    type: Unknown
- call: !Binary
  - a
  - b
  ret:
  - Boolean
  - null
  params:
  - name: a
    description: test condition or variable
    type: Unknown
  - name: b
    description: code that returns [[Boolean]]. It is '''not''' evaluated if ''a'' is [[false]]
    type: Unknown
  since:
    arma_2_arrowhead:
      major: 1
      minor: 62
argument_loc: Unspecified
effect_loc: Unspecified
since:
  flashpoint:
    major: 1
    minor: 0
  flashpoint_elite:
    major: 1
    minor: 0
  armed_assault:
    major: 1
    minor: 0
  arma_2:
    major: 1
    minor: 0
  arma_2_arrowhead:
    major: 1
    minor: 50
  take_on_helicopters:
    major: 1
    minor: 0
  arma_3:
    major: 0
    minor: 50
examples:
- "if ((not isNull player) and (alive player) and (_enemycount == 0)) then\n{\n\thint \"you win !\";\n};\n"
- "if ((count _array > 0) and { (_array select 0) == player }) then\t// works as expected\n{\n\thint \"It works!\";\n};\n\nif ((count _array > 0) and (_array select 0) == player) then\t\t// Error: _array select 0 is evaluated\n{\n\thint \"It... works?\";\n};\n"
