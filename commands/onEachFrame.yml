name: onEachFrame
description: |-
  Runs given statement every frame in an [[Scheduler#Unscheduled Environment|unscheduled environment]].
  {{Feature|arma3|
  In order to keep compatibility between official and community content:
  * Since {{arma3}} v1.58 a stackable version of this EH is available: [[Arma 3: Mission Event Handlers#EachFrame|EachFrame Mission Event Handler]]
  * Before that, the scripted version of the event handler should be used instead (using [[BIS_fnc_addStackedEventHandler]] and [[BIS_fnc_removeStackedEventHandler]]).
  }}
groups:
- Event Handlers
syntax:
- call: !Unary statement
  ret:
  - Nothing
  - null
  params:
  - name: statement
    type: Unknown
argument_loc: Unspecified
effect_loc: Unspecified
since:
  arma_2_arrowhead:
    major: 1
    minor: 63
  take_on_helicopters:
    major: 1
    minor: 0
  arma_3:
    major: 0
    minor: 50
examples:
- <sqf>onEachFrame { hintSilent str getPosWorld player }; // hints position every frame</sqf>
- |-
  Private variables defined outside of the [[onEachFrame]] scope are not inherited:
  <sqf>
  _myVar = "bob";
  MyVar = "bill";
  onEachFrame { hintSilent str [_myVar, MyVar]; };
  // Result: [any, "bill"]
  </sqf>
- "Only one [[onEachFrame]] loop can exist at any time:\n<sqf>\nonEachFrame { player sideChat \"first\"; };\nonEachFrame { player sideChat \"second\"; };\t// replaces the first one\nonEachFrame {};\t\t\t\t\t\t\t\t// reset to the initial state\n</sqf>"
- |-
  Script suspension is not permitted within [[onEachFrame]] scope:
  <sqf>
  // will throw an error
  onEachFrame { sleep 1; };
  </sqf>
- "<sqf>\nonEachFrame { if (diag_frameNo mod 60 isEqualTo 0) then { /* code */ } };\t// executes every 60 frames (every second @ 60 FPS, every two seconds @ 30 FPS, etc)\n\nonEachFrame {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// this version is the closest to a precise 1 second tick\n\tif (isNil \"TAG_LastHint\") then\n\t{\n\t\tTAG_LastHint = diag_tickTime;\n\t}\n\telse\n\t{\n\t\tif (diag_tickTime - TAG_LastHint >= 1) then // set the duration in seconds here\n\t\t{\n\t\t\thint format [\"a second has passed (%1s since game start)\", diag_tickTime];\n\t\t\tTAG_LastHint = diag_tickTime;\n\t\t};\n\t};\n};\n</sqf>"
