name: select
description: Selects an element from an array, config entry from [[Config]] or substring from a string or a range from an array.
groups:
- Arrays
- Strings
- Config
syntax:
- call: !Binary
  - array
  - index
  ret:
  - Unknown
  - a <u>reference</u> to the array element given by its index
  params:
  - name: array
    type: Unknown
  - name: index
    description: |-
      index 0 denotes the first element, 1 the second, etc. If index has decimal places it gets rounded down for fractions less than or equal .5, otherwise it gets rounded up.<br>
      {{GVI|arma3|2.12|size= 0.75}} negative index can be used to select from the end of the array, i.e. -1 means last array element.
    type: Number
- call: !Binary
  - array
  - boolean
  ret:
  - Unknown
  - a <u>reference</u> to the array element
  params:
  - name: array
    type: Unknown
  - name: boolean
    description: '[[false]] selects the ''''''first'''''' element of the [[Array]], [[true]] the ''''''second'''''' one'
    type: Boolean
- call: !Binary
  - config
  - index
  ret:
  - Config
  - null
  params:
  - name: config
    type: Config
  - name: index
    description: index 0 denotes the first element, 1 the second, etc. If index has decimal places it gets rounded down for fractions less than or equal .5, otherwise it gets rounded up
    type: Number
  since:
    armed_assault:
      major: 1
      minor: 0
- call: !Binary
  - string
  - - start
    - length
  ret:
  - String
  - null
  params:
  - name: string
    type: String
  - name: start
    description: string position to start selection from. 0 denotes the first character of the string, 1 the second, etc. If passed number has decimal places it gets rounded down for fractions less than or equal .5, otherwise it gets rounded up
    type: Number
  - name: length
    description: number of characters to select
    type: Number
    optional: true
    default: '''''string''''''s length'
  since:
    arma_3:
      major: 1
      minor: 28
- call: !Binary
  - array
  - - start
    - count
  ret:
  - Unknown
  - a <u>new array</u> from selection
  params:
  - name: array
    type: Unknown
  - name: start
    description: array index to start selection from
    type: Number
  - name: count
    description: |-
      ({{GVI|arma3|2.14|size= 0.75}} Optional) number of array elements to select. If the selected range exceeds source array boundaries, selection will be made up to the last element of the array.
      {{Feature|informative|Since v2.14 'count' is optional, if omitted the selection is made from ''start'' until the end of the array.}}
    type: Number
  since:
    arma_3:
      major: 1
      minor: 32
- call: !Binary
  - array
  - expression
  ret:
  - Unknown
  - a <u>new array</u> of all elements from the original array that satisfied expression condition
  params:
  - name: array
    type: Unknown
  - name: expression
    description: |-
      expression that is expected to return [[Boolean]] or [[Nothing]].
      If [[true]] is returned, the original array value of currently tested element [[Magic Variables#x|_x]] will be added to the output array
    type: Code
  since:
    arma_3:
      major: 1
      minor: 56
argument_loc: Unspecified
effect_loc: Unspecified
since:
  flashpoint:
    major: 1
    minor: 0
  flashpoint_elite:
    major: 1
    minor: 0
  armed_assault:
    major: 1
    minor: 0
  arma_2:
    major: 1
    minor: 0
  arma_2_arrowhead:
    major: 1
    minor: 50
  take_on_helicopters:
    major: 1
    minor: 0
  arma_3:
    major: 0
    minor: 50
examples:
- "[\"a\", \"b\", \"c\", \"d\"] select 2;\t// result is \"c\"\nposition player select 2;\t\t// result is Z coordinate of player position\n"
- '["", currentWeapon player] select alive player; // if player is dead, "" is selected'
- (configFile >> "cfgVehicles" >> typeOf vehicle player >> "Turrets") select 0 >> "gunnerAction";
- "hint str (\"japa is the man!\" select [8]);\t\t// the man!\nhint str (\"japa is the man!\" select [0, 7]);\t// japa is\n"
- hint str ([1,2,3,4,5,6] select [1, 4]); // [2,3,4,5]
- _even = [1,2,3,4,5,6,7,8,9,0] select { _x % 2 == 0 }; // returns [2, 4, 6, 8, 0]
- "JavaScript endsWith() alternative:\n<sqf>\nprivate _fnc_endsWith = \n{\n\tparams [\"_string\", \"_endswith\"];\n\t_string select [count _string - count _endswith] isEqualTo _endswith\n};\n\n[\"Arma 3\", \"3\"] call _fnc_endsWith; // true\n[\"Arma 3\", \"4\"] call _fnc_endsWith; // false\n"
- "[[select]] index traps:\n<sqf>\nprivate _array = [\"a\", \"b\", \"c\", \"d\"];\n_array select 0; // \"a\"\n_array select 3; // \"d\"\n_array select 4; // nil - no error shown\n_array select 5; // error\n\n// can sometimes be useful\nprivate _firstEnemyNearMe = allUnits opfor select { player distance _x < 10 } select 0; // nil if no enemies nearby\nif (isNil _firstEnemyNearMe) exitWith { systemChat \"no enemy found\" };\nsystemChat format [\"enemy found: %1\", name _firstEnemyNearMe];\n\n// get the last element properly\n_array select (count _array);\t\t// wrong - nil is returned\n_array select (count _array - 1);\t// correct - \"d\" is returned\n"
